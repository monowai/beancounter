plugins {
    id 'io.spring.dependency-management'
    id 'org.jetbrains.kotlin.jvm'
    id 'kotlin-spring'
    id 'idea'
    id 'checkstyle'
    id 'jacoco'
    id 'org.jmailen.kotlinter'
    id 'kotlin-jpa'
    id 'org.springframework.boot' version "${springVersion}"
    id "com.gorylenko.gradle-git-properties" version "${gitProperties}"
}
apply from: '../kotlin-spring.gradle'

version = "0.1.1"

dependencies {
    implementation(
            platform("org.springframework.boot:spring-boot-dependencies:${springVersion}"),
            platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"),
            project(":jar-common"),
            project(":jar-auth"),
            project(":jar-client"),
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-logging",
            "org.springframework.boot:spring-boot-starter-data-jpa",
            "org.springframework.cloud:spring-cloud-starter-openfeign",
            "org.springframework.boot:spring-boot-starter-security",
            "org.springframework.security:spring-security-oauth2-resource-server",
            "org.springframework.security:spring-security-oauth2-jose",
            "org.springframework.boot:spring-boot-starter-actuator",
            "org.springframework.boot:spring-boot-starter-integration",
            "org.jetbrains.kotlin:kotlin-reflect",
            "org.mockito.kotlin:mockito-kotlin:4.0.0",
            "com.fasterxml.jackson.module:jackson-module-kotlin",
            "io.github.resilience4j:resilience4j-spring-cloud2",
            "io.github.resilience4j:resilience4j-circuitbreaker",
            "io.github.resilience4j:resilience4j-annotations",
            "io.github.resilience4j:resilience4j-ratelimiter",
            "io.github.resilience4j:resilience4j-timelimiter",
            "com.h2database:h2",
            'org.postgresql:postgresql:42.5.1',
            "com.github.ben-manes.caffeine:caffeine",
            "org.springframework.kafka:spring-kafka"
    )

    compileOnly(
            "org.springframework.boot:spring-boot-configuration-processor"
    )

    testImplementation(
            "org.junit.jupiter:junit-jupiter",
            "org.assertj:assertj-core",
            "com.h2database:h2",
            "com.fasterxml.jackson.module:jackson-module-kotlin",
            "org.springframework.boot:spring-boot-starter-test",
            "org.springframework.cloud:spring-cloud-contract-stub-runner",
            //https://github.com/spring-cloud/spring-cloud-contract/issues/1419
            "org.springframework.cloud:spring-cloud-loadbalancer",
            "org.springframework.security:spring-security-test",
            "org.springframework.cloud:spring-cloud-contract-wiremock",
            "org.springframework.kafka:spring-kafka-test",
            testFixtures(project(":jar-auth")),

    )
    testImplementation("org.beancounter:svc-position:0.1.1:stubs") {
        transitive = false
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

}

springBoot {
    buildInfo()
}

gitProperties {
    failOnNoGitDirectory = false
}

bootBuildImage {
    imageName = "monowai/bc-event"
}
repositories {
    mavenCentral()
}
kotlin {
    jvmToolchain(17)
}