server:
  port: 9500
  servlet:
    context-path: '/api'

management:
  server:
    port: 9501
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    livenessstate:
      enabled: true
    readinessState:
      enabled: true
  info:
    git:
      mode: SIMPLE

marketdata:
  url: "http://localhost:9510"

auth:
  uri: "http://your-auth0-endpoint/"
  audience: "auth0-audience"
  enabled: true
  email: "${auth.audience}/claims/email"

spring:
  application:
    name: bc-position
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${auth.uri}
  cloud:
    openfeign:
      client:
        config:
          default:
            connectTimeout: 5000
            readTimeout: 160000
            loggerLevel: NONE

endpoints:
  default.web.enabled: true

logging:
  level:
    root: debug
    javax: error
    sun: error
    io: error
    #io.github.resilience4j: debug
    netflix: error
    jdk: error
    feign: fatal
    com:
      netfix: error
      beancounter: debug
      zaxxer: error
    org:
      springframework: error
      hibernate: error
      apache: error
      postgres: error

resilience4j.circuitbreaker:
  configs:
    default:
      failureRateThreshold: 3
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 3
      slidingWindowType: TIME_BASED
      waitDurationInOpenState: 5s
      registerHealthIndicator: true
      recordFailurePredicate: com.beancounter.common.exception.RecordFailurePredicate

resilience4j.retry:
  configs:
    default:
      maxRetryAttempts: 3
      waitDuration: 20s
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
      retryExceptions:
        - org.springframework.web.client.HttpServerErrorException
        - java.io.IOException
        - feign.RetryableException
      ignoreExceptions:
        - com.beancounter.common.exception.BusinessException
    instances:
      bcData:
        baseConfig: default
        maxRetryAttempts: 3
