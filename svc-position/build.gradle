buildscript {
    ext {
        contractsDir = file("mappings")
        stubsOutputDirRoot = file("${project.buildDir}/production/${project.name}-stubs/")
    }
    dependencies {
        classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:$verifierVersion"
    }
}

plugins {
    id "io.spring.dependency-management"
    id 'org.springframework.boot' version "${springVersion}"
    id "maven-publish"
    id 'org.jetbrains.kotlin.jvm'
    id 'kotlin-spring'
}

apply plugin: 'spring-cloud-contract'
apply from: '../kotlin-spring.gradle'

version = '0.1.1'
publishing {
    publications {
        stubs(MavenPublication) {
            groupId "org.beancounter"
            artifactId "${project.name}"
            artifact verifierStubsJar
        }
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

dependencies {
    implementation(
            project(":jar-common"),
            project(":jar-client"),
            project(":jar-auth"),
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-logging",
            "org.springframework.cloud:spring-cloud-starter-openfeign",
            "org.springframework.boot:spring-boot-starter-security",
            "org.springframework.security:spring-security-oauth2-resource-server",
            "org.springframework.security:spring-security-oauth2-jose",
            "org.springframework.boot:spring-boot-starter-actuator",
            "org.springframework.boot:spring-boot-starter-integration",
            "com.fasterxml.jackson.module:jackson-module-kotlin",
            "org.jetbrains.kotlin:kotlin-reflect",
            "io.github.resilience4j:resilience4j-spring-cloud2:$resilience4jVersion",
            "io.github.resilience4j:resilience4j-annotations:$resilience4jVersion",
            "io.github.resilience4j:resilience4j-circuitbreaker:$resilience4jVersion",
            "io.github.resilience4j:resilience4j-timelimiter:$resilience4jVersion",
            "io.github.resilience4j:resilience4j-reactor:$resilience4jVersion"
    )

    compileOnly(
            "org.springframework.boot:spring-boot-configuration-processor"
    )
    contractTestImplementation(group: 'org.springframework.cloud', name: 'spring-cloud-stream', classifier: 'test-binder')
    contractTestImplementation(
            'org.springframework.cloud:spring-cloud-starter-contract-verifier',
            'javax.inject:javax.inject:1',
    )
    testImplementation(
            "org.assertj:assertj-core",
            "com.fasterxml.jackson.core:jackson-databind",
            "org.springframework.boot:spring-boot-starter-test",
            "org.springframework.security:spring-security-test",
            "org.springframework.cloud:spring-cloud-contract-wiremock",
            "org.mockito.kotlin:mockito-kotlin:4.0.0",
            //https://github.com/spring-cloud/spring-cloud-contract/issues/1419
            "org.springframework.cloud:spring-cloud-loadbalancer",
            "org.springframework.cloud:spring-cloud-contract-stub-runner",
            "org.junit.jupiter:junit-jupiter"

    )
    testImplementation("org.beancounter:svc-data:0.1.1:stubs") {
        transitive = false
    }
}

contracts {
    testFramework = "JUNIT5"
    testMode = "MockMvc"
    baseClassForTests = "com.beancounter.position.contracts.ContractVerifierBase"
}

contractTest {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
    }
}

task pubStubs {
    dependsOn build
    dependsOn publishToMavenLocal
}

jacoco {
    toolVersion = "$jacocoVersion"
}