plugins {
    alias(libs.plugins.jvm)
    alias(libs.plugins.kotlin.spring)
    alias(libs.plugins.java.test.fixtures)
    alias(libs.plugins.sentry)
}

ext {
    guavaVersion = '33.3.1-jre'
}

dependencies {
    api(libs.jackson.kotlin, libs.sentry.opentelemetry)
    implementation(
            "org.jetbrains.kotlin:kotlin-reflect",
            platform(libs.spring.boot.dependencies),
            platform("io.opentelemetry:opentelemetry-bom:1.45.0"),
            "io.opentelemetry:opentelemetry-sdk",
            "jakarta.servlet:jakarta.servlet-api:6.0.0",
            "com.fasterxml.jackson.core:jackson-databind",
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310",
            "com.fasterxml.jackson.module:jackson-module-kotlin",
            "org.springframework:spring-web",
            "org.springframework.boot:spring-boot-starter-data-jpa",
            "org.springframework.kafka:spring-kafka",
            "org.springframework.cloud:spring-cloud-starter-openfeign:4.1.3",
            libs.guava
    )
    testImplementation(
            "org.springframework.boot:spring-boot-starter-test",
            "com.fasterxml.jackson.core:jackson-databind",
            "org.mockito:mockito-core",
            "org.mockito:mockito-junit-jupiter",
            "jakarta.servlet:jakarta.servlet-api:6.0.0",
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310",
            "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml",
            "org.springframework.kafka:spring-kafka",
            "org.jetbrains.kotlin:kotlin-reflect",
            "org.assertj:assertj-core",
            libs.guava,
            "org.springframework:spring-web",
            "org.junit.jupiter:junit-jupiter"
    )
    testImplementation("com.fasterxml.jackson.module:jackson-module-kotlin") {
        exclude module: 'kotlin-reflect'
    }
}