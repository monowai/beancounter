plugins {
    id 'io.spring.dependency-management'
    id 'org.jetbrains.kotlin.jvm'
    id 'kotlin-spring'
    id 'idea'
    id 'checkstyle'
    id 'jacoco'
    id 'org.jmailen.kotlinter'
    id "maven-publish"
    id 'org.springframework.boot' version "${springVersion}"
    id 'org.springframework.cloud.contract' version "${verifierVersion}"
    id "com.gorylenko.gradle-git-properties" version "${gitProperties}"
}

apply from: '../kotlin-spring.gradle'

version = '0.1.1'
publishing {
    publications {
        // https://youtrack.jetbrains.com/issue/IDEA-162281
        stubs(MavenPublication) {
            groupId "org.beancounter"
            artifactId "${project.name}"
            artifact verifierStubsJar
        }
    }
}

dependencies {
    implementation(
            platform("org.springframework.boot:spring-boot-dependencies:${springVersion}"),
            platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"),
            project(":jar-common"),
            project(":jar-client"),
            project(":jar-auth"),
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-logging",
            "org.springframework.cloud:spring-cloud-starter-openfeign",
            "org.springframework.boot:spring-boot-starter-security",
            "org.springframework.security:spring-security-oauth2-resource-server",
            "org.springframework.security:spring-security-oauth2-jose",
            "org.springframework.boot:spring-boot-starter-actuator",
            "org.springframework.boot:spring-boot-starter-integration",
            "org.jetbrains.kotlinx:kotlinx-coroutines-core",
            "com.fasterxml.jackson.module:jackson-module-kotlin",
            "org.jetbrains.kotlin:kotlin-reflect",
            "io.github.resilience4j:resilience4j-spring-cloud2",
            "io.github.resilience4j:resilience4j-annotations",
            "io.github.resilience4j:resilience4j-circuitbreaker",
            "io.github.resilience4j:resilience4j-timelimiter",
            "io.github.resilience4j:resilience4j-reactor",
            "org.apache.commons:commons-math3:3.6.1"
    )

    compileOnly(
            "org.springframework.boot:spring-boot-configuration-processor"
    )
    contractTestImplementation(
            'org.springframework.cloud:spring-cloud-starter-contract-verifier',
    )
    testImplementation(
            "org.assertj:assertj-core",
            "com.fasterxml.jackson.core:jackson-databind",
            "org.springframework.boot:spring-boot-starter-test",
            "org.springframework.security:spring-security-test",
            "org.springframework.cloud:spring-cloud-contract-wiremock",
            "org.springframework.cloud:spring-cloud-contract-stub-runner",
            "org.junit.jupiter:junit-jupiter",
            "org.mockito.kotlin:mockito-kotlin:${mockitoKotlinVersion}",
            testFixtures(project(":jar-auth")),
    )
    testImplementation("org.beancounter:svc-data:0.1.1:stubs") {
        transitive = false
    }
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
}

contracts {
    testFramework = "JUNIT5"
    testMode = 'EXPLICIT'
    baseClassForTests = "com.contracts.position.ContractVerifierBase"

}

tasks.register('pubStubs') {
    dependsOn build
    dependsOn publishToMavenLocal
}

tasks.lintKotlinContractTest {
    dependsOn generateContractTests
}

tasks.formatKotlinContractTest {
    dependsOn generateContractTests
}

springBoot {
    buildInfo()
}

gitProperties {
    failOnNoGitDirectory = false
}

bootBuildImage {
    imageName = "monowai/bc-position"
}
repositories {
    mavenCentral()
}
kotlin {
    jvmToolchain(21)
}
