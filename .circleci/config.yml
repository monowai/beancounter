version: 2.1

executors:
  java-build:
    environment:
      _JAVA_OPTIONS: "-Xms256m -Xmx512m"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false"

    docker:
      - image: cimg/openjdk:15.0.2
jobs:
  build-common:
    executor: java-build
    environment:
      IMAGE_NAME: bc-data

    steps:
      - add_ssh_keys:
          fingerprints:
            - "7e:93:fb:39:b3:21:f7:b6:48:bd:f7:0e:56:5c:ad:87"
      - checkout
      - restore_cache:
          keys:
            - v2-build-cache-{{ checksum "~/project/jar-common/build.gradle" }}-{{ checksum "~/project/svc-data/build.gradle" }}-{{ checksum "~/project/jar-shell/build.gradle" }}-{{ checksum "~/project/svc-position/build.gradle" }}
      - run: 'pwd'
      - run: './gradlew jar-common:build jar-auth:build svc-data:publishToMavenLocal svc-position:publishToMavenLocal'

      - save_cache:
          paths:
            - ~/.gradle
          key: v2-build-cache-{{ checksum "~/project/jar-common/build.gradle" }}-{{ checksum "~/project/svc-data/build.gradle" }}-{{ checksum "~/project/jar-shell/build.gradle" }}-{{ checksum "~/project/svc-position/build.gradle" }}

      - save_cache:
          paths:
            - ~/.m2
            - ~/.gradle
            - ~/project

          key: v1-sha-cache-{{ .Environment.CIRCLE_SHA1 }}

      - store_artifacts:
          path: ~/project/svc-data/build/libs
      - store_artifacts:
          path: ~/project/jar-common/build/libs
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./jar-common/build/reports/jacoco/test/*.xml
            - ./codecov.yml

  build-client:
    executor: java-build
    steps:
      - add_ssh_keys:
          fingerprints:
            - "7e:93:fb:39:b3:21:f7:b6:48:bd:f7:0e:56:5c:ad:87"
      - restore_cache:
          keys:
            - v1-sha-cache-{{ .Environment.CIRCLE_SHA1 }}

      - run: './gradlew jar-client:build'

      - persist_to_workspace:
          root: ~/project
          paths:
            - ./jar-client/build/reports/jacoco/test/*.xml

      - store_test_results:
          path: ~/project/jar-client/build/test-results/test

      - store_artifacts:
          path: ~/project/jar-client/build/libs

  build-shell:
    executor: java-build
    environment:
      IMAGE_NAME: bc-shell

    steps:
      - add_ssh_keys:
          fingerprints:
            - "7e:93:fb:39:b3:21:f7:b6:48:bd:f7:0e:56:5c:ad:87"
      - restore_cache:
          keys:
            - v1-sha-cache-{{ .Environment.CIRCLE_SHA1 }}

      - run: './gradlew jar-shell:build'
      - setup_remote_docker
      - run:
          name: Package BC-SHELL
          command: |
            docker build ~/project/jar-shell/. -t monowai/$IMAGE_NAME:latest
            docker tag monowai/$IMAGE_NAME:latest monowai/$IMAGE_NAME:${CIRCLE_BUILD_NUM}
            docker save -o ~/project/$IMAGE_NAME.tar monowai/$IMAGE_NAME
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./bc-shell.tar
            - ./jar-shell/build/reports/jacoco/test/*.xml

      - store_test_results:
          path: ~/project/jar-shell/build/test-results/test

      - store_artifacts:
          path: ~/project/jar-shell/build/libs

  build-data:
    executor: java-build
    environment:
      IMAGE_NAME: bc-data
    steps:
      - add_ssh_keys:
          fingerprints:
            - "7e:93:fb:39:b3:21:f7:b6:48:bd:f7:0e:56:5c:ad:87"

      - restore_cache:
          keys:
            - v1-sha-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run: './gradlew svc-data:build'
      - setup_remote_docker
      - run:
          name: Package BC-DATA
          command: |
            docker build ~/project/svc-data/. -t monowai/$IMAGE_NAME:latest
            docker tag monowai/$IMAGE_NAME:latest monowai/$IMAGE_NAME:${CIRCLE_BUILD_NUM}
            docker save -o ~/project/$IMAGE_NAME.tar monowai/$IMAGE_NAME
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./bc-data.tar
            - ./svc-data/build/reports/jacoco/test/*.xml
      - store_test_results:
          path: ./svc-data/build/test-results/test
      - store_artifacts:
          path: ~/project/svc-data/build/libs

  build-position:
    executor: java-build
    environment:
      IMAGE_NAME: bc-position
    steps:
      - add_ssh_keys:
          fingerprints:
            - "7e:93:fb:39:b3:21:f7:b6:48:bd:f7:0e:56:5c:ad:87"

      - restore_cache:
          keys:
            - v1-sha-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run: './gradlew svc-position:build'
      - setup_remote_docker
      - run:
          name: Package BC-POSITION
          command: |
            docker build ~/project/svc-position/. -t monowai/$IMAGE_NAME:latest
            docker tag monowai/$IMAGE_NAME:latest monowai/$IMAGE_NAME:${CIRCLE_BUILD_NUM}
            docker save -o ~/project/$IMAGE_NAME.tar monowai/$IMAGE_NAME
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./bc-position.tar
            - ./svc-position/build/reports/jacoco/test/*.xml
      - store_test_results:
          path: ~/project/svc-position/build/test-results/test
      - store_artifacts:
          path: ~/project/svc-position/build/libs

  build-event:
    executor: java-build
    environment:
      IMAGE_NAME: bc-event
    steps:
      - add_ssh_keys:
          fingerprints:
            - "7e:93:fb:39:b3:21:f7:b6:48:bd:f7:0e:56:5c:ad:87"

      - restore_cache:
          keys:
            - v1-sha-cache-{{ .Environment.CIRCLE_SHA1 }}
      - run: './gradlew svc-event:build'
      - setup_remote_docker
      - run:
          name: Package BC-event
          command: |
            docker build ~/project/svc-event/. -t monowai/$IMAGE_NAME:latest
            docker tag monowai/$IMAGE_NAME:latest monowai/$IMAGE_NAME:${CIRCLE_BUILD_NUM}
            docker save -o ~/project/$IMAGE_NAME.tar monowai/$IMAGE_NAME
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./bc-event.tar
            - ./svc-event/build/reports/jacoco/test/*.xml
      - store_test_results:
          path: ~/project/svc-event/build/test-results/test
      - store_artifacts:
          path: ~/project/svc-event/build/libs

  publish-coverage:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - add_ssh_keys:
          fingerprints:
            - "7e:93:fb:39:b3:21:f7:b6:48:bd:f7:0e:56:5c:ad:87"
      - attach_workspace:
          at: ~/workspace
      - run:
          name: CodeCov Coverage
          command: |
            cd ~/workspace
            bash <(curl -Ls https://codecov.io/bash)
      - run:
          name: Codacy Coverage
          command: |
            cd ~/workspace
            bash <(curl -Ls https://coverage.codacy.com/get.sh) report -l Kotlin $(find **/jacoco*.xml -printf '-r %p ')
            bash <(curl -Ls https://coverage.codacy.com/get.sh) report -l Java $(find **/jacoco*.xml -printf '-r %p ')

  publish-docker:
    docker:
      - image: circleci/buildpack-deps:stretch
    environment:
      BC_POSITION: monowai/bc-position
      BC_DATA: monowai/bc-data
      BC_EVENT: monowai/bc-event
      BC_SHELL: monowai/bc-shell

    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Publish POSITION
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            ls /tmp/workspace
            test -f /tmp/workspace/bc-position.tar &&
                docker load -i /tmp/workspace/bc-position.tar &&
                docker push $BC_POSITION

      - run:
          name: Publish DATA
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            test -f /tmp/workspace/bc-data.tar &&
                docker load -i /tmp/workspace/bc-data.tar &&
                docker push $BC_DATA

      - run:
          name: Publish EVENT
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            test -f /tmp/workspace/bc-event.tar &&
                docker load -i /tmp/workspace/bc-event.tar &&
                docker push $BC_EVENT

      - run:
          name: Publish SHELL
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
            test -f /tmp/workspace/bc-shell.tar &&
                docker load -i /tmp/workspace/bc-shell.tar &&
                docker push $BC_SHELL



workflows:
  version: 2
  build_and_stage:
    jobs:
      - build-common
      - build-client:
          requires:
            - build-common
      - build-shell:
          requires:
            - build-client
      - build-data:
          requires:
            - build-client
      - build-position:
          requires:
            - build-client
      - build-event:
          requires:
            - build-client
      - publish-coverage:
          requires:
            - build-shell
            - build-position
            - build-data
            - build-event
      - publish-docker:
          filters:
            branches:
              only: master
          requires:
            - publish-coverage
#            - build-shell
#            - build-position
#            - build-data
#            - build-event