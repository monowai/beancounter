server:
  port: 9520
  servlet:
    context-path: '/api'
  shutdown: graceful

management:
  server:
    port: 9521
  endpoint:
    health.show-details: always
  endpoints:
    web:
      exposure.include: '*'
      base-path: "/"
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 15000
        loggerLevel: NONE

logging:
  level:
    root: debug
    javax: error
    sun: error
    netflix: error
    jdk: error
    io:
      github:
        resilience4j: error
    feign: error
    com:
      netfix: error
      beancounter: debug
      zaxxer: error
    org:
      springframework: error
      springframework.scheduling: debug
      hibernate: error
      apache: error
      postgres: error
      postgresql: error
    kafa: info

marketdata:
  url: "http://localhost:9510/api"

position:
  url: "http://localhost:9500/api"

auth:
  uri: "http://your-auth0-endpoint/"
  audience: "auth0-audience"
  enabled: true
  client-id: "not-set"
  client-secret: "not-set"

spring:
  application:
    name: bc-event
  cache:
    cache-names: auth.m2m
  datasource:
    username: sa
    password:
    url: jdbc:h2:mem:test-ev;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
  jpa:
    open-in-view: false
    generate-ddl: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${auth.uri}
      registration:
        custom:
          client-id: ${auth.client-id}
          client-secret: ${auth.client-secret}
          scope:
            - openid
            - profile
            - email
            - beancounter
            - beancounter:user
            - beancounter:system
          authorization-grant-type: client_credentials

  kafka:
    bootstrap-servers: kafka:9092
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: bc-event
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.beancounter.common.input

kafka:
  enabled: "true"

resilience4j.ratelimiter:
  instances:
    positions:
      registerHealthIndicator: false
      limitForPeriod: 60
      limitRefreshPeriod: 65s
      timeoutDuration: 80s
      eventConsumerBufferSize: 200

resilience4j.circuitbreaker:
  configs:
    default:
      failureRateThreshold: 3
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 3
      slidingWindowType: TIME_BASED
      waitDurationInOpenState: 5s
      registerHealthIndicator: true
      recordFailurePredicate: com.beancounter.common.exception.RecordFailurePredicate

