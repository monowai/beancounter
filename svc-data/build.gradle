buildscript {
    ext {
        contractsDir = file("mappings")
        stubsOutputDirRoot = file("${project.buildDir}/production/${project.name}-stubs/")
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:$springVerifierVersion"
    }
}

plugins {
    id "io.spring.dependency-management" version "$springDependencyManagement"
    id "org.springframework.boot" version "$springBootVersion"
    id "maven-publish"
}
apply plugin: 'spring-cloud-contract'
apply from: "../javaCommon.gradle"

version = "0.1.1"

publishing {
    publications {
        stubs(MavenPublication) {
            groupId "org.beancounter"
            artifactId "${project.name}"
            artifact verifierStubsJar
        }
    }
}

dependencies {
    implementation(
            project(":jar-common"),
            project(":jar-auth"),
            project(":jar-client"),
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-data-jpa",
            "org.springframework.boot:spring-boot-starter-logging",
            "org.springframework.cloud:spring-cloud-starter-openfeign",
            "org.springframework.boot:spring-boot-starter-security",
            "org.springframework.security:spring-security-oauth2-resource-server",
            "org.springframework.security:spring-security-oauth2-jose",
            "org.springframework.boot:spring-boot-starter-actuator",
            "io.github.resilience4j:resilience4j-spring-cloud2:$resilience4jVersion",
            "io.github.resilience4j:resilience4j-circuitbreaker:$resilience4jVersion",
            "io.github.resilience4j:resilience4j-ratelimiter:$resilience4jVersion",
            "io.github.resilience4j:resilience4j-timelimiter:$resilience4jVersion",
            "com.github.ben-manes.caffeine:caffeine",
            "com.h2database:h2",
            "org.postgresql:postgresql:42.2.13",
            "org.projectlombok:lombok",
            "org.springframework.kafka:spring-kafka"
    )

    compileOnly "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"

    testImplementation("io.rest-assured:rest-assured") {
        exclude(group: "com.sun.xml.bind", module: "jaxb-osgi")
    }
    testImplementation(
            "org.projectlombok:lombok",
            "org.junit.jupiter:junit-jupiter",
            "org.assertj:assertj-core",
            "io.rest-assured:spring-mock-mvc",
            "com.h2database:h2",
            "io.rest-assured:json-schema-validator",
            "org.springframework.boot:spring-boot-starter-test",
            "org.springframework.security:spring-security-test",
            'org.springframework.cloud:spring-cloud-starter-contract-verifier',
            "org.springframework.cloud:spring-cloud-contract-wiremock",
            "org.springframework.kafka:spring-kafka-test",
            // Not strictly needed, but pulling into build cache
            "org.springframework.cloud:spring-cloud-contract-stub-runner"
            // End not strictly needed

    )

}

dependencyManagement {
    imports { mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}" }
}

contracts {
    // https://cloud.spring.io/spring-cloud-contract/2.1.x/single/spring-cloud-contract.html#gradle-default-setup
    testFramework = "JUNIT5"
    testMode = "MockMvc"
    packageWithBaseClasses = "com.beancounter.marketdata.contracts"
    baseClassMappings {
        baseClassMapping(".*contract.*", "com.beancounter.marketdata.contracts.ContractVerifierBase")
    }
}

idea {
    module {
        inheritOutputDirs = false
        downloadSources = true
        outputDir = file("$buildDir/classes/main/")
        testOutputDir = file("$buildDir/classes/main/")
    }
}

task pubStubs {
    dependsOn build
    dependsOn publishToMavenLocal
}
