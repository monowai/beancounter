auth:
  uri: "http://your-auth0-endpoint/"
  audience: "auth0-audience"
  enabled: true
  web: false

spring:
  main:
    banner-mode: "off"
    web-application-type: none
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${auth.uri}
  kafka:
    bootstrap-servers: kafka:9092
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  cloud:
    openfeign:
      client:
        config:
          default:
            errorDecoder: com.beancounter.common.exception.SpringFeignDecoder
            loggerLevel: NONE

  jackson:
    serialization:
      INDENT_OUTPUT: true

  cache:
    cache-names: market

logging:
  level:
    root: error
    org: error
    com: error
    com.beancounter.shell.IngestBoot: error
    com.beancounter: debug
    org.springframework.web.servlet: info
    feign: error
    sun: error
    jdk: error
    javax: error
    io: error
    io.github.resilience4j: fatal
  pattern:
    console: "%d - %m%n"

    # http://localhost:9500/actuator/circuitbreaker-events/marketdata

resilience4j:
  retry:
    configs:
      default:
        maxRetryAttempts: 10
        waitDuration: 700
        ignoreExceptions:
          - com.beancounter.common.exception.BusinessException
          - io.github.resilience4j.circuitbreaker.CallNotPermittedException

  circuitbreaker:
    configs:
      default:
        failureRateThreshold: 3
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowType: TIME_BASED
        waitDurationInOpenState: 5s
        registerHealthIndicator: true
        recordFailurePredicate: com.beancounter.common.exception.RecordFailurePredicate
