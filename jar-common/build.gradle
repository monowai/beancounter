plugins {
  alias(libs.plugins.spring.dependency.management)
  alias(libs.plugins.jvm)
  alias(libs.plugins.kotlin.spring)
  alias(libs.plugins.java.test.fixtures)
  alias(libs.plugins.sentry)
}

ext {
  guavaVersion = '33.0.0-jre'
}

dependencies() {
  api(
    "com.fasterxml.jackson.module:jackson-module-kotlin",
    libs.sentry.opentelemetry
  )
  implementation(
    "org.jetbrains.kotlin:kotlin-reflect",
    platform(libs.spring.boot.dependencies)
  )

  implementation(
    implementation(platform("io.opentelemetry:opentelemetry-bom:1.43.0")),
    "io.opentelemetry:opentelemetry-sdk",
    "jakarta.servlet:jakarta.servlet-api:6.0.0",
    "com.fasterxml.jackson.core:jackson-databind",
    "com.fasterxml.jackson.datatype:jackson-datatype-jsr310",
    "com.fasterxml.jackson.module:jackson-module-kotlin",
    "org.jetbrains.kotlin:kotlin-reflect",
    "org.springframework:spring-web",
    "org.springframework.boot:spring-boot-starter-data-jpa",
    "org.springframework.kafka:spring-kafka",
    "org.springframework.cloud:spring-cloud-starter-openfeign:4.1.3",
    "com.google.guava:guava:${guavaVersion}",
  )
  testImplementation(
    "org.springframework.boot:spring-boot-starter-test",
    "com.fasterxml.jackson.core:jackson-databind",
    "org.mockito:mockito-core",
    "org.mockito:mockito-junit-jupiter",
    "jakarta.servlet:jakarta.servlet-api:6.0.0",
    "com.fasterxml.jackson.datatype:jackson-datatype-jsr310",
    "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml",
    "org.springframework.kafka:spring-kafka",
    "org.jetbrains.kotlin:kotlin-reflect",
    "org.assertj:assertj-core",
    "com.google.guava:guava:${guavaVersion}",
    "org.springframework:spring-web",
    "org.junit.jupiter:junit-jupiter",
  )

  testImplementation("com.fasterxml.jackson.module:jackson-module-kotlin") { exclude module: 'kotlin-reflect' }
  implementation "org.jetbrains.kotlin:kotlin-stdlib"
}
