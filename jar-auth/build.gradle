buildscript {
    ext {
        springWebVersion = "5.2.9.RELEASE"
        jacksonVersion = "2.11.+"
        lombokVersion = "1.18.16"

    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'kotlin-spring'
}

apply from: "../javaCommon.gradle"

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

version = '0.0.1'

dependencies {
    implementation(
            project(":jar-common"),
            "javax.servlet:javax.servlet-api:4.0.1",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion",
            "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion",
            "org.springframework:spring-webmvc:$springWebVersion",
            "org.springframework.cloud:spring-cloud-starter-openfeign:$springCloudOpenFeign",
            "org.springframework.security:spring-security-config:$springSecurityVersion",
            "org.springframework.security:spring-security-oauth2-resource-server:$springSecurityVersion",
            "org.springframework.security:spring-security-oauth2-jose:$springSecurityVersion",
            "org.jetbrains.kotlin:kotlin-reflect"

    )
    compileOnly(
            "org.projectlombok:lombok:$lombokVersion"
    )
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

    testImplementation(
            "org.junit.jupiter:junit-jupiter",
            "org.assertj:assertj-core:$assertJ",
            "io.rest-assured:spring-mock-mvc:4.3.0",
            "org.springframework.boot:spring-boot-autoconfigure:$springBootVersion",
            "org.springframework.boot:spring-boot-test:$springBootVersion",
            "org.springframework.cloud:spring-cloud-contract-stub-runner:2.2+",
            "org.springframework.security:spring-security-test:$springSecurityVersion",
            "org.springframework.security:spring-security-oauth2-client:$springSecurityVersion"

    )
}

idea {
    module {
        inheritOutputDirs = false
        downloadSources = true
        outputDir = file("$buildDir/classes/main/")
        testOutputDir = file("$buildDir/classes/main/")
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}
