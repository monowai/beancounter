buildscript {
    ext {
        springBootVersion = "2.2.1.RELEASE"
        googleClientVersion = "1.30.5"
    }
}
plugins {
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
    id "org.springframework.boot" version "${springBootVersion}"
}

apply from: '../buildtools/javaCommon.gradle'


repositories {
    mavenLocal()
    maven { url "https://repo.spring.io/milestone" }
    mavenCentral()
    gradlePluginPortal()
}
version = "0.1.1"


dependencies {
    implementation(
            project(":jar-common"),
            "org.springframework.boot:spring-boot-starter-web",
            "org.springframework.boot:spring-boot-starter-logging",
            "org.springframework.cloud:spring-cloud-starter-openfeign",
            "org.springframework.boot:spring-boot-starter-actuator",
            "com.fasterxml.jackson.core:jackson-databind",
            "com.google.api-client:google-api-client:${googleClientVersion}",
            "com.google.oauth-client:google-oauth-client-jetty:1.30.3",
            "com.google.apis:google-api-services-sheets:v4-rev581-1.25.0"
    )

    compileOnly(
            "org.springframework.boot:spring-boot-configuration-processor",
            "org.projectlombok:lombok"
    )

    annotationProcessor "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"
    testImplementation("io.rest-assured:rest-assured") {
        exclude(group:"com.sun.xml.bind", module:"jaxb-osgi")
    }

    testImplementation(
            "org.projectlombok:lombok",
            "org.assertj:assertj-core",
            "io.rest-assured:json-schema-validator",
            "org.springframework.boot:spring-boot-starter-test",
            "org.springframework.cloud:spring-cloud-contract-wiremock",
            "org.springframework.cloud:spring-cloud-contract-stub-runner",
            "org.junit.jupiter:junit-jupiter"

    )
    testImplementation("org.beancounter:svc-md:0.1.1:stubs") {
        transitive = false
    }

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


idea {
    module {
        inheritOutputDirs = false
        downloadSources = true
        outputDir = file("$buildDir/classes/main/")
        testOutputDir = file("$buildDir/classes/main/")
    }
}
