plugins {
    id 'io.spring.dependency-management'
    id 'org.jetbrains.kotlin.jvm'
    id 'kotlin-spring'
    id 'idea'
    id 'checkstyle'
    id 'jacoco'
    id 'org.jmailen.kotlinter'
    id 'kotlin-jpa'
}
apply from: '../kotlin-spring.gradle'


ext {
    guavaVersion = '33.0.0-jre'
}

dependencies() {
    implementation(
            "jakarta.servlet:jakarta.servlet-api:6.0.0",
            "com.fasterxml.jackson.core:jackson-databind",
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310",
            "com.fasterxml.jackson.module:jackson-module-kotlin",
            "org.jetbrains.kotlin:kotlin-reflect",
            "org.springframework:spring-web",
            "org.springframework.boot:spring-boot-starter-data-jpa",
            "org.springframework.kafka:spring-kafka",
            "org.springframework.cloud:spring-cloud-starter-openfeign:4.1.1",
            "com.google.guava:guava:${guavaVersion}"
    )

    testImplementation(
            "org.springframework.boot:spring-boot-starter-test",
            "com.fasterxml.jackson.core:jackson-databind",
            "org.mockito:mockito-core",
            "org.mockito:mockito-junit-jupiter",
            "jakarta.servlet:jakarta.servlet-api:6.0.0",
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310",
            "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml",
            "org.springframework.kafka:spring-kafka",
            "org.jetbrains.kotlin:kotlin-reflect",
            "org.assertj:assertj-core",
            "com.google.guava:guava:${guavaVersion}",
            "org.springframework:spring-web",
            "org.junit.jupiter:junit-jupiter",
    )
    implementation(
            "org.jetbrains.kotlin:kotlin-reflect",
            platform("org.springframework.boot:spring-boot-dependencies:${springVersion}")
    )

    testImplementation("com.fasterxml.jackson.module:jackson-module-kotlin") { exclude module: 'kotlin-reflect' }
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
}

idea {
    module {
        inheritOutputDirs = false
        downloadSources = true
    }
}
repositories {
    mavenCentral()
}
kotlin {
    jvmToolchain(21)
}