# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
kotlin = "1.9.24"
kotlinter = "5.0.1"
spring-boot = "3.4.2"
spring-cloud = "2024.0.0"
spring-cloud-contract = "4.2.0"
spring-kafka = "3.3.2"
spring-security = "6.4.2"
jackson = "2.18.2"
mockitoKotlin = '5.4.0'
sentry = "7.20.0"
postgres = "42.7.4"
guava = "33.4.0-jre"
servlet-api = "6.1.0"

[libraries]
spring-boot-dependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot" }
spring-cloud-dependencies = { module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "spring-cloud" }
spring-stub-runner = { module = "org.springframework.cloud:spring-cloud-contract-stub-runner", version.ref = "spring-cloud-contract" }
servlet-api = { module = "jakarta.servlet:jakarta.servlet-api", version.ref = "servlet-api" }
apache-groovy = { module = "org.apache.groovy:groovy", version = "4.0.24" } # stub runner importing older version
otel-bom = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom", version = "2.11.0" }
resilience4j = { module = "io.github.resilience4j:resilience4j-all", version = "2.1.0" }
resilience4j-annotations = { module = "io.github.resilience4j:resilience4j-annotations", version = "2.3.0" }
spring-cloud-feign = { module = "org.springframework.cloud:spring-cloud-starter-openfeign", version = "4.2.0" }
commons-io = { module = "commons-io:commons-io", version = "2.14.0" }
spring-kafka = { module = "org.springframework.kafka:spring-kafka", version.ref = "spring-kafka" }
spring-kafka-test = { module = "org.springframework.kafka:spring-kafka-test", version.ref = "spring-kafka" }
spring-security-oauth2 = { module = "org.springframework.security:spring-security-oauth2-resource-server", version.ref = "spring-security" }
spring-security-jose = { module = "org.springframework.security:spring-security-oauth2-jose", version.ref = "spring-security" }
sentry-openfeign = { module = "io.sentry:sentry-openfeign", version.ref = "sentry" }
sentry-opentelemetry = { module = "io.sentry:sentry-opentelemetry-core", version.ref = "sentry" }
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
assertj = { module = "org.assertj:assertj-core", version = "3.27.3" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "mockitoKotlin" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "mockitoKotlin" }
kotest-framework-engine = { module = "io.kotest:kotest-framework-engine", version.ref = "mockitoKotlin" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgres" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }

[plugins]
jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
idea = { id = "idea" }
jacoco = { id = "jacoco" }
kotlinter = { id = "org.jmailen.kotlinter", version.ref = "kotlinter" }
java-test-fixtures = { id = "java-test-fixtures" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
sentry = { id = "io.sentry.jvm.gradle", version = "4.14.1" }
spring-contract = { id = "org.springframework.cloud.contract", version.ref = "spring-cloud-contract" }
git-properties = { id = "com.gorylenko.gradle-git-properties", version = "2.4.2" }
download = { id = "de.undercouch.download", version = "5.6.0" }

