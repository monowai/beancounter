plugins {
    id 'kotlin-jpa'
}
apply from: '../kotlin-spring.gradle'

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:${springVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

ext {
    openfeignVersion = '12.1'
    guavaVersion = '31.1-android'
}

dependencies() {

    compileOnly(
            "jakarta.servlet:jakarta.servlet-api:6.0.0",
            "com.fasterxml.jackson.core:jackson-databind",
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310",
            "com.fasterxml.jackson.module:jackson-module-kotlin",
            "org.jetbrains.kotlin:kotlin-reflect",
            "org.springframework:spring-web",
            "org.springframework.boot:spring-boot-starter-data-jpa",
            "io.github.openfeign:feign-core:${openfeignVersion}",
            "org.springframework.kafka:spring-kafka",
            "com.google.guava:guava:${guavaVersion}"
    )
    testImplementation(
            "com.fasterxml.jackson.core:jackson-databind",
            "org.slf4j:slf4j-log4j12",
            "org.mockito:mockito-core",
            "org.mockito:mockito-junit-jupiter",
            "jakarta.servlet:jakarta.servlet-api:6.0.0",
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310",
            "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml",
            "org.springframework.kafka:spring-kafka",
            "org.jetbrains.kotlin:kotlin-reflect",
            "org.assertj:assertj-core",
            "io.github.openfeign:feign-core:${openfeignVersion}",
            "com.google.guava:guava:${guavaVersion}",
            "org.springframework:spring-web",
            "org.junit.jupiter:junit-jupiter",
    )
    implementation(
            "org.jetbrains.kotlin:kotlin-reflect"
    )

    testImplementation("com.fasterxml.jackson.module:jackson-module-kotlin") { exclude module: 'kotlin-reflect' }
}

idea {
    module {
        inheritOutputDirs = false
        downloadSources = true
        outputDir = file("$buildDir/classes/main/")
        testOutputDir = file("$buildDir/classes/main/")
    }
}