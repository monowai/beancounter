plugins {
  id 'io.spring.dependency-management'
  id 'org.jetbrains.kotlin.jvm'
  id 'kotlin-spring'
  id 'idea'
  id 'checkstyle'
  id 'jacoco'
  id 'org.jmailen.kotlinter'
  id "maven-publish"
  id 'org.springframework.boot' version "${springVersion}"
  id 'org.springframework.cloud.contract' version "${verifierVersion}"
  id "com.gorylenko.gradle-git-properties" version "${gitProperties}"
  id "io.sentry.jvm.gradle" version "4.12.0"
}

apply from: '../kotlin-spring.gradle'

version = '0.1.1'
publishing {
  publications {
    // https://youtrack.jetbrains.com/issue/IDEA-162281
    stubs(MavenPublication) {
      groupId "org.beancounter"
      artifactId "${project.name}"
      artifact verifierStubsJar
    }
  }
}
dependencyManagement {
  imports {
    mavenBom("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom:2.6.0")
  }
}

dependencies {
  implementation(
    platform("org.springframework.boot:spring-boot-dependencies:${springVersion}"),
    platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"),
    project(":jar-common"),
    project(":jar-client"),
    project(":jar-auth"),
    "org.springframework.boot:spring-boot-starter-web",
    "org.springframework.boot:spring-boot-starter-logging",
    "io.sentry:sentry-spring-boot-starter-jakarta:7.15.0",
    "io.sentry:sentry-opentelemetry-core:7.15.0",
    "io.sentry:sentry-openfeign:7.15.0",
    "org.springframework.boot:spring-boot-starter-aop",
    "org.springframework.cloud:spring-cloud-starter-openfeign",
    "org.springframework.boot:spring-boot-starter-security",
    "org.springframework.security:spring-security-oauth2-resource-server",
    "org.springframework.security:spring-security-oauth2-jose",
    "org.springframework.boot:spring-boot-starter-actuator",
    "org.springframework.boot:spring-boot-starter-integration",
    "org.jetbrains.kotlinx:kotlinx-coroutines-core",
    "com.fasterxml.jackson.module:jackson-module-kotlin",
    "org.jetbrains.kotlin:kotlin-reflect",
    "io.github.resilience4j:resilience4j-spring-cloud2",
    "io.github.resilience4j:resilience4j-annotations",
    "io.github.resilience4j:resilience4j-circuitbreaker",
    "io.github.resilience4j:resilience4j-timelimiter",
    "io.github.resilience4j:resilience4j-reactor",
    "org.springframework.kafka:spring-kafka",
    "org.apache.commons:commons-math3:3.6.1"
  )

  compileOnly(
    "org.springframework.boot:spring-boot-configuration-processor"
  )
  contractTestImplementation(
    'org.springframework.cloud:spring-cloud-starter-contract-verifier',
  )
  testImplementation(
    "org.assertj:assertj-core",
    "com.fasterxml.jackson.core:jackson-databind",
    "org.springframework.boot:spring-boot-starter-test",
    "org.springframework.security:spring-security-test",
    "org.springframework.cloud:spring-cloud-contract-wiremock",
    "org.springframework.cloud:spring-cloud-contract-stub-runner",
    "org.springframework.kafka:spring-kafka-test",
    "org.junit.jupiter:junit-jupiter",
    "org.mockito.kotlin:mockito-kotlin:${mockitoKotlinVersion}",
    testFixtures(project(":jar-auth")),
  )
  testImplementation("org.beancounter:svc-data:0.1.1:stubs") {
    transitive = false
  }
  implementation "org.jetbrains.kotlin:kotlin-stdlib"
}

contracts {
  testFramework = "JUNIT5"
  testMode = 'EXPLICIT'
  baseClassForTests = "com.contracts.position.ContractVerifierBase"

}

tasks.register('pubStubs') {
  dependsOn build
  dependsOn publishToMavenLocal
}

tasks.lintKotlinContractTest {
  dependsOn generateContractTests
}

tasks.formatKotlinContractTest {
  dependsOn generateContractTests
}

springBoot {
  buildInfo()
}

gitProperties {
  failOnNoGitDirectory = false
}

bootBuildImage {
  imageName = "monowai/bc-position"
}
repositories {
  mavenCentral()
}
kotlin {
  jvmToolchain(21)
}

sentry {
  // Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.
  // This enables source context, allowing you to see your source
  // code as part of your stack traces in Sentry.
  includeSourceContext = true

  org = "monowai-developments-ltd"
  projectName = "position"
  authToken = System.getenv("SENTRY_AUTH_TOKEN")
}
